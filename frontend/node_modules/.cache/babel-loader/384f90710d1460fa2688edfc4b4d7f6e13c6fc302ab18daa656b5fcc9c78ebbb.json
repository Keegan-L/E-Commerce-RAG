{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport const sendMessage = async (message, chatHistory) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chat`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: message,\n        chat_history: chatHistory\n      })\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to send message');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error in sendMessage:', error);\n    throw error;\n  }\n};\nexport const searchParts = async query => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/search`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to search parts');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in searchParts:', error);\n    throw error;\n  }\n};\nexport const getPartDetails = async partId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/part/${partId}`, {\n      method: 'GET'\n    });\n    if (!response.ok) {\n      throw new Error('Failed to get part details');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error in getPartDetails:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","sendMessage","message","chatHistory","response","fetch","method","headers","body","JSON","stringify","query","chat_history","data","json","ok","Error","error","console","searchParts","getPartDetails","partId"],"sources":["/Users/keeganli/Desktop/Github/Instalily RAG/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\n\nexport const sendMessage = async (message, chatHistory) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chat`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: message,\n        chat_history: chatHistory\n      }),\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to send message');\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Error in sendMessage:', error);\n    throw error;\n  }\n};\n\nexport const searchParts = async (query) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/search`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to search parts');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error in searchParts:', error);\n    throw error;\n  }\n};\n\nexport const getPartDetails = async (partId) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/part/${partId}`, {\n      method: 'GET',\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to get part details');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error in getPartDetails:', error);\n    throw error;\n  }\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,OAAO,EAAEC,WAAW,KAAK;EACzD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,OAAO,EAAE;MACnDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAET,OAAO;QACdU,YAAY,EAAET;MAChB,CAAC;IACH,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,wBAAwB,CAAC;IACzD;IAEA,OAAOJ,IAAI;EACb,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOR,KAAK,IAAK;EAC1C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,SAAS,EAAE;MACrDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC;MAAM,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,OAAO,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,SAASqB,MAAM,EAAE,EAAE;MAC7Df,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI,CAACF,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,OAAO,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}